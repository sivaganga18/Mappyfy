{
  "_args": [
    [
      {
        "raw": "react-native-md-textinput",
        "scope": null,
        "escapedName": "react-native-md-textinput",
        "name": "react-native-md-textinput",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/siva/Documents/Siva/freelance/mappyfy"
    ]
  ],
  "_from": "react-native-md-textinput@latest",
  "_id": "react-native-md-textinput@2.0.4",
  "_inCache": true,
  "_location": "/react-native-md-textinput",
  "_nodeVersion": "5.6.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/react-native-md-textinput-2.0.4.tgz_1464571360162_0.5695715257897973"
  },
  "_npmUser": {
    "name": "evblurbs",
    "email": "johnson.evan1@gmail.com"
  },
  "_npmVersion": "3.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-md-textinput",
    "scope": null,
    "escapedName": "react-native-md-textinput",
    "name": "react-native-md-textinput",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-md-textinput/-/react-native-md-textinput-2.0.4.tgz",
  "_shasum": "9f81cff16ceba0bc595fc58ed1239bd13a4023a8",
  "_shrinkwrap": null,
  "_spec": "react-native-md-textinput",
  "_where": "/Users/siva/Documents/Siva/freelance/mappyfy",
  "author": {
    "name": "Evan Johnson"
  },
  "bugs": {
    "url": "https://github.com/evblurbs/react-native-md-textinput/issues"
  },
  "dependencies": {},
  "description": "React Native TextInput styled with Material Design.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "9f81cff16ceba0bc595fc58ed1239bd13a4023a8",
    "tarball": "https://registry.npmjs.org/react-native-md-textinput/-/react-native-md-textinput-2.0.4.tgz"
  },
  "gitHead": "6c616e19766c9fd117d0d1011643b8544da96b0f",
  "homepage": "https://github.com/evblurbs/react-native-md-textinput#readme",
  "keywords": [
    "react-native",
    "TextInput",
    "material-design",
    "material",
    "design"
  ],
  "license": "MIT",
  "main": "lib/TextField.js",
  "maintainers": [
    {
      "name": "evblurbs",
      "email": "johnson.evan1@gmail.com"
    }
  ],
  "name": "react-native-md-textinput",
  "optionalDependencies": {},
  "readme": "# React Native Material Design TextInput\n\nReact Native TextInput styled with Material Design.\n\n![demo](/demo.gif)\n\n## Installation\n```\nnpm install react-native-md-textinput\n```\n\n## Usage\n\nI'm going to refer to the `react-native-md-textinput` Component as `TextField`. You can name it whatever you like when importing it.\n\nThe most basic usage is to import the `TextField` Component and render it with the props `label` and `highlightColor`. Note that this example uses the [ScrollView](https://facebook.github.io/react-native/docs/scrollview.html) Component. This allows the keyboard to be dismissed when users tap outside the input and keyboard area.\n\n```javascript\nimport TextField from 'react-native-md-textinput';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ScrollView>\n        <TextField label={'Name'} highlightColor={'#00BCD4'} />\n      </ScrollView>\n    );\n  }\n}\n```\n\n### TextInput\n\nTo customize the `TextInput` that is rendered inside the `TextField` Component, simply pass props the `TextInput` accepts to the `TextField` Component. You can find the props the `TextInput` Component accepts [here](https://facebook.github.io/react-native/docs/textinput.html#props).\n\nHere is an example of how to change the keyboard type to `numeric`.\n\n```javascript\nimport TextField from 'react-native-md-textinput';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ScrollView>\n        <TextField\n          label={'Name'}\n          highlightColor={'#00BCD4'}\n          keyboardType={'numeric'}\n        />\n      </ScrollView>\n    );\n  }\n}\n```\n\n### Dense Styling\n\nTo use the \"dense\" styling that matches the [Material Design Style Guide](https://www.google.com/design/spec/components/text-fields.html#text-fields-labels), you can set the prop `dense` to `true`. By default, this prop is set to `false`.\n\n![demo dense](/demo-dense.gif)\n\n## Props\n\nBelow are the props you can pass to the React Component to customize the TextInput.\n\nProp | Type | Default | description\n-----|------|---------|------------\nlabel | string | | This string appears as the label.\nhighlightColor | string | | This string represents the hex code, rgb, or rgba color of the TextInput label and underline when it is active/focused on.\nduration | number | `200` | A number representing the duration of floating label and underline animations in milliseconds.\nlabelColor | string | `#9E9E9E` | This string represents the hex code, rgb, or rgba color of the TextInput label when it is inactive.\ntextColor | string | `#000` | This string represents the hex code, rgb, or rgba color of the text entered in the TextInput. Note: If you set textFocusColor or textBlurColor, those colors will override this one during the corresponding state of the TextInput.\ntextFocusColor | string | | This string represents the hex code, rgb, or rgba color of the text entered in the TextInput when it is active/focused on.\ntextBlurColor | string | | This string represents the hex code, rgb, or rgba color of the text entered in the TextInput when it is inactive.\nborderColor | string | `#E0E0E0` | This string represents the hex code, rgb, or rgba color of the TextInput underline when it is inactive.\ndense | bool | `false` | If true, it will render the \"dense\" input field which is smaller in height and has smaller font sizes. You can view more [here](https://www.google.com/design/spec/components/text-fields.html#text-fields-labels).\nunderlineColorAndroid | string | `rgba(0,0,0,0)` | This sets the default underline color on Android to transparent ([Issue #1](https://github.com/evblurbs/react-native-md-textinput/issues/1)).\n\n### Style Overrides\n\nThe main purpose of this component is to easily add a TextInput that matches the [Material Design Style Guide](https://www.google.com/design/spec/components/text-fields.html#text-fields-labels). With that said, there have been requests (i.e. [PR #4](https://github.com/evblurbs/react-native-md-textinput/pull/4)) to style the component beyond the [Material Design Style Guide](https://www.google.com/design/spec/components/text-fields.html#text-fields-labels). I've added the props below to allow you to do exactly that. **DO THIS AT YOUR OWN RISK**. Changing the layout requires an understanding of the main elements of this component (i.e. FloatingLabel, the Viewwrapper, and the TextInput), and may cause compatibility issues between Android and iOS ([Issue #2](https://github.com/evblurbs/react-native-md-textinput/issues/2)). I'll try to support any issues with these props, but they will be treated as second class citizens.\n\nProp | Type | Default | description\n-----|------|---------|------------\ninputStyle | Object | | Object to override the styles of the TextInput.<sup>[1](#reactStyleObject)</sup>\nwrapperStyle | Object | | Object to override the styles of the View that wraps the TextInput.<sup>[1](#reactStyleObject)</sup>\nlabelStyle | Object | | Object to override the styles of the Label that animates on focus of the TextInput.<sup>[1](#reactStyleObject)</sup>\n\n<a name=\"reactStyleObject\">1</a>: Object to override styles needs to match the format of [inline styles](https://facebook.github.io/react/tips/inline-styles.html). You can find the supported properties [here](https://facebook.github.io/react-native/docs/style.html#supported-properties).\n\n## TODO\n\n- [ ] Support multi-line TextInput fields\n- [ ] Support character limit\n- [ ] Add option for dark theme\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/evblurbs/react-native-md-textinput.git"
  },
  "scripts": {},
  "version": "2.0.4"
}
